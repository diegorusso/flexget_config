variables: secrets.yml

schedules:
  - tasks: ['populate-*', 'clean-*', 'update-*']
    schedule:
      hour: 0
  - tasks: ['purge-*', 'fill-*', '*-rss', '*-magnets']
    schedule:
      minute: 0,30
  - tasks: ['*-discover', '*-manual']
    schedule:
      hour: '*/2'
  - tasks: ['move-*', 'download-subtitles']
    schedule:
      minute: 15,45

templates:

##### Series config
#
  series:
    thetvdb_lookup: yes
    configure_series:
      from:
        entry_list: trakt-series
      settings:
        identified_by: ep
        timeframe: 8 hours
        target: hdtv+ 720p !10bit !h265
        quality: webrip+ 720p !10bit !h265
        propers: 8 hours
        quality: webrip+ 720p
        specials: yes
    content_size:
      min: 20
    content_filter:
      require:
        - '*.mkv'
        - '*.mp4'
        - '*.avi'

##### Movies config
#
  movies-720p:
    tmdb_lookup: yes
    movie_list: trakt-movies
    #quality: 720p webdl+ !10bit !h265
    #quality: webdl+ !10bit !h265
    content_size:
      min: 500
      max: 5000

##### Transmission config
#
  transmission-anchors:
    _transmission-settings: &transmission-settings
      host: '{? transmission.host ?}'
      port: 9091
      username: '{? transmission.user ?}'
      password: '{? transmission.pass ?}'

##### Common rejections
#
  reject:
      #    regexp:
      #      reject:
      #        - (s|d)ub(s|bed|lado|titulado)?\b
      #        - \bdual\b
      #        - \b3d\b
      #        - \b(fr)(ench)?\b
      #          #    - \b(ita)(lian)?\b
      #        - \b(spa)(nish)?\b
      #        - \b(ger)(man)?\b
      #        - \bcastellano\b
      #        - \brus(sian)?\b
    content_filter:
      reject:
        - '*.rar'
        - '*.zip'


##### ADVANCED SETTINGS #####

##### Global config
#
  global:
    no_entries_ok: yes
    pathscrub: windows
    free_space:
      path: '/{? folder.root ?}'
      space: 5000
    # Requires log_filter plugin
    log_filter:
      task:
        - marked seen
        - because quality already downloaded
        - because episode has already been downloaded
        - Task does not have any
      move:
        - left because it exceeds safety value
        - does not exists (anymore)
      urlrewriter:
        - URL rewritten to
      enzyme.mkv:
        - Reading
        - Processing
      enzyme.parsers.ebml.core:
        - ignored
        - Maximum level
      subliminal.video:
        - Scanning video
      parser_internal:
        - appears to be an episode pack
      content_size:
        - rejecting
      search_rss:
        - Error
      assume_quality:
        - ""
      utils.requests:
        - Waiting

##### Common torrents config
#
  torrents:
    torrent_alive:
      min_seeds: 2
      reject_for: 5 minutes
    magnets: no
    # Might need to disable if you are getting errors connecting to https sources
    # Can remove if you upgrade to python 2.7.9+ or install requests[security]
    verify_ssl_certificates: no
    domain_delay:
      thepiratebay.red: 10 seconds

##### Transmission series config
#
  transmission-series:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
      path: "/{? folder.host_series ?}{{ tvdb_series_name|default(series_name)|pathscrub }}/"

##### Transmission movies config
#
  transmission-movies:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
      path: "/{? folder.host_movies ?}{{ movie_name|pathscrub }}"


##### Disable builtins for some tasks
#
  disable-seen-retry:
    disable:
      - seen
      - seen_info_hash
      - retry_failed

##### Series metainfo mainly for move and update tasks
#
  series-metainfo:
    metainfo_series: yes
    thetvdb_lookup: yes

##### Guessit parsing for some series tasks, not applied to all tasks because it causes issues with "name (year)" based series, like scandal
#
  series-guessit:
    parsing:
      series: guessit

##### Movies metainfo mainly for move and update tasks
#
  movies-metainfo:
    tmdb_lookup: yes
    parsing:
      movie: guessit


tasks:

##### Populates the series database with the files on the library, to avoid duplicate downloads
#
  populate-series-db:
    priority: 1
    template:
      - series-metainfo
    seen: local
    filesystem:
      path: '/{? folder.root ?}{? folder.series ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    configure_series:
      from:
        filesystem:
          path: '/{? folder.root ?}{? folder.series ?}'
          retrieve: dirs
      settings:
        tracking: no


##### Purge the series list to allow full sync with trakt series list
#
  purge-series-list:
    priority: 2
    template:
      - disable-seen-retry
    entry_list: trakt-series
    accept_all: yes
    list_remove:
      - entry_list: trakt-series


##### Fetch, format and output trakt series list to a custom entry list
#
  fill-series-list:
    priority: 3
    template:
      - disable-seen-retry
      - series-metainfo
    trakt_list:
      account: '{? trakt.account ?}'
      list: '{? trakt.series ?}'
      type: shows
    accept_all: yes
    set:
      title: "{{ tvdb_series_name|escape|replace('&#39;', '') }}"
    list_add:
      - entry_list: trakt-series


##### Download episodes from manually downloaded torrents
#
  download-series-manual:
    priority: 4
    template:
      - disable-seen-retry
      - series-metainfo
      - series-guessit
      - transmission-series
    filesystem:
      path: '/{? folder.root ?}{? folder.downloads ?}{? folder.series ?}'
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{ location }}"


##### Download episodes from RSS feeds
#
  download-series-rss:
    priority: 5
#    manipulate:
#      - url:
#          replace:
#            regexp: 'http://extratorrent.cc/(?P<a>.*)'
#            format: 'http://extratorrents.unblockall.xyz/\g<a>'
    template:
      - series
      - reject
      - torrents
      - transmission-series
    inputs:
      - rss: https://eztv.unblocked.cam/ezrss.xml


##### Download episodes from RSS magnets feeds, as a fallback from the previous task
#
  download-series-magnets:
    priority: 6
    template:
      - series
      - reject
      - torrents
      - transmission-series
    magnets: yes
    convert_magnet: yes
    inputs:
      - rss:
          url: http://showrss.info/other/all.rss
          all_entries: yes


##### Discover and download older episodes and pilots from recently added series
#
  download-series-discover:
    priority: 7
    template:
      - series
      - reject
      - torrents
      - transmission-series
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - next_series_episodes:
            from_start: yes
      from:
        - piratebay:
            category: highres tv

##### Remove manually downloaded movies from the movie queue and trakt list
#
  clean-movie-queue:
    priority: 8
    template:
      - disable-seen-retry
      - movies-metainfo
    filesystem:
      path: '/{? folder.root ?}{? folder.movies ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.movies ?}'
          type: movies


##### Fill the movie queue with movies from trakt list
#
  fill-movie-queue:
    priority: 9
    trakt_list:
      account: '{? trakt.account ?}'
      list: '{? trakt.movies ?}'
      type: movies
      strip_dates: yes
    accept_all: yes
    list_add:
      - movie_list: trakt-movies


##### Download movies manually downloaded torrents
#
  download-movies-manual:
    priority: 10
    template:
      - disable-seen-retry
      - movies-metainfo
      - transmission-movies
    filesystem:
      path: '/{? folder.root ?}{? folder.downloads ?}{? folder.movies ?}'
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{ location }}"
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.movies ?}'
          type: movies


##### Discover and download 720p movies, if the movie is not recent
#
  download-movies-720p-discover:
    priority: 11
    template:
      - movies-720p
      - reject
      - torrents
      - transmission-movies
    exists_movie:
      - '/{? folder.root ?}{? folder.downloads ?}{? folder.movies ?}'
      - '/{? folder.root ?}{? folder.movies ?}'
    discover:
      release_estimations: loose
      interval: 15 minutes
      what:
        - movie_list: trakt-movies
      from:
        - piratebay:
            category: highres movies
        - extratorrent:
            category: movies
    if:
      - tmdb_year > now.year - 1: reject
    list_match:
      from:
        - movie_list: trakt-movies
    list_remove:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.movies ?}'
          type: movies


##### Move series from downloads folder to respective folders, along with existing subtitles and adding the files to the subtitle queue
#
  move-series:
    priority: 12
    template:
      - disable-seen-retry
      - series-metainfo
    filesystem:
      path: '/{? folder.root ?}{? folder.downloads ?}{? folder.series ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    move:
      to: "/{? folder.root ?}{? folder.series ?}{{ tvdb_series_name|escape|replace('&#39;', '')|pathscrub }}/"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 50
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{ location }}"
          remove_after: 7 days
  #    exec:
  #    on_exit:
  #      phase: find '/{? folder.root ?}{? folder.downseries ?}'* -type d -empty -delete


##### Move movies from downloads folder to the movies folder, along with possible subtitles and adding the files to the subtitle queue
#
  move-movies:
    priority: 13
    template:
      - disable-seen-retry
      - movies-metainfo
    filesystem:
      path: '/{? folder.root ?}{? folder.downloads ?}{? folder.movies ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    regexp:
      reject:
        - \btrailer\b
        - \bsample\b
    move:
      to: '/{? folder.root ?}{? folder.movies ?}'
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 100
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{ location }}"
          remove_after: 7 days
    #exec:
    #  on_exit:
    #    phase: find '/{? folder.root ?}{? folder.downmovies ?}'* -type d -empty -delete


##### Download subtitles for the previously queued files
#
  download-subtitles:
    priority: 14
    template:
      - disable-seen-retry
    filesystem:
      path:
        - '/{? folder.root ?}{? folder.downloads ?}'
      regexp: '.*\.(avi|mkv|mp4)$'  # only include filenames with these extensions
      recursive: yes
    accept_all: yes
    seen: local
    subtitle_list:
      list: subtitles
    list_match:
      from:
        - subtitle_list:
            list: subtitles
    subliminal:
      exact_match: yes
      languages:
        - eng


##### Clean finished torrents from transmission
#
  clean-transmission:
    priority: 15
    disable: details
    clean_transmission:
      <<: *transmission-settings
      finished_for: 1 day


##### Update trakt series list from local series folders, excluding the ones that already ended
#
  update-series-list:
    priority: 16
    template:
      - disable-seen-retry
      - series-metainfo
    filesystem:
      path: '/{? folder.root ?}{? folder.series ?}'
      retrieve: dirs
    manipulate:
      - title:
          replace:
            regexp: '$'
            format: ' S01E01'
    accept_all: yes
    if:
      - tvdb_status == 'Ended': reject
    list_add:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.series ?}'
          type: shows


##### Clean the series that already ended from trakt series list
#
  clean-series-list:
    priority: 17
    delay: 8 day
    template:
      - disable-seen-retry
      - series-metainfo
    trakt_list:
      account: '{? trakt.account ?}'
      list: '{? trakt.series ?}'
      type: shows
    if:
      - tvdb_status == 'Ended': accept
    list_remove:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.series ?}'
          type: shows
